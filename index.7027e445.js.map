{"mappings":"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","sources":["index.js"],"sourcesContent":["const element = document.getElementById('element');\nconst grid = document.getElementById('grid');\nconst free = document.getElementById('free');\nconst error = document.getElementById('error');\nlet draggableElement = {};\n\nif (!element || !grid || !free || !error) {\n    document.body.innerHTML = 'Internal error, please contact with developers';\n    throw new Error('Internal error, please contact with developers');\n}\n\nfunction getRandomColor() {\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nfunction getTargetZone(clientX, clientY) {\n    const isPointerInZone = (coords) => {\n        return clientX >= coords.left && clientX <= coords.right && clientY >= coords.top && clientY <= coords.bottom;\n    };\n    if (isPointerInZone(grid.getBoundingClientRect())) {\n        return grid;\n    }\n    if (isPointerInZone(free.getBoundingClientRect())) {\n        return free;\n    }\n\n    return null;\n}\n\nfunction enterZone(zone) {\n    if (!zone) {\n        return;\n    }\n    try {\n        zone.classList.add(`${zone.id}_target`);\n    } catch (e) {\n        error.innerHTML = 'Internal error, please contact with developers';\n    }\n}\n\nfunction leaveZone(zone) {\n    if (!zone) {\n        return;\n    }\n    zone.classList.remove(`${zone.id}_target`);\n}\n\nfunction toggleGridScroll() {\n    try {\n        if (grid.scrollHeight > grid.clientHeight) {\n            grid.classList.add('grid_scroll');\n        } else {\n            grid.classList.remove('grid_scroll');\n        }\n    } catch (e) {\n        error.innerHTML = 'Internal error, please contact with developers';\n    }\n}\n\nfunction insertToZone(zone, elem) {\n    if (!elem || !zone) {\n        return;\n    }\n\n    const insertToGridZone = (elem) => {\n        elem.classList.remove('element_move');\n        grid.append(elem);\n        toggleGridScroll();\n    };\n\n    const insertToFreeZone = (elem) => {\n        // calc element position in free zone\n        elem.style.left = `${parseInt(elem.style.left, 10) - free.getBoundingClientRect().left - 1}px`;\n        elem.style.top = `${parseInt(elem.style.top, 10) - free.getBoundingClientRect().top - 1}px`;\n        free.append(elem);\n    };\n\n    leaveZone(zone);\n    try {\n        if (zone === grid) {\n            insertToGridZone(elem);\n        }\n        if (zone === free) {\n            insertToFreeZone(elem);\n        }\n    } catch (e) {\n        error.innerHTML = 'Internal error, please contact with developers';\n    }\n}\n\nfunction findZonesToHighlight(clientX, clientY) {\n    leaveZone(grid);\n    leaveZone(free);\n\n    const targetZone = getTargetZone(clientX, clientY);\n    if (!targetZone) {\n        return;\n    }\n\n    enterZone(targetZone);\n}\n\nfunction moveAt(pageX, pageY) {\n    if (!draggableElement.elem) {\n        return;\n    }\n    draggableElement.elem.style.left = `${pageX - draggableElement.shiftX}px`;\n    draggableElement.elem.style.top = `${pageY - draggableElement.shiftY}px`;\n}\n\nfunction startDrag(pageX, pageY, pointerType) {\n    if (!draggableElement.elem) {\n        return;\n    }\n    try {\n        // turn off browser drag'n'drop\n        draggableElement.elem.addEventListener('dragstart', () => false);\n\n        // change element position and add to document body\n        draggableElement.elem.classList.add('element_move');\n        document.body.append(draggableElement.elem);\n\n        // add events\n        document.addEventListener('pointermove', documentPointerMoveHandler);\n        if (pointerType === 'touch') {\n            element.addEventListener('pointerup', elementPointerUpHandler);\n        } else {\n            draggableElement.elem.addEventListener('pointerup', elementPointerUpHandler);\n        }\n\n        // move to pointer position\n        moveAt(pageX, pageY);\n    } catch (e) {\n        error.innerHTML = 'Internal error, please contact with developers';\n    }\n}\n\nfunction documentPointerMoveHandler(event) {\n    moveAt(event.pageX, event.pageY);\n    findZonesToHighlight(event.clientX, event.clientY);\n}\n\nfunction elementPointerUpHandler(event) {\n    // remove events\n    document.removeEventListener('pointermove', documentPointerMoveHandler);\n    event.target.removeEventListener('pointerup', elementPointerUpHandler);\n\n    if (!draggableElement.elem) {\n        return;\n    }\n\n    const targetZone = getTargetZone(event.clientX, event.clientY);\n    if (!targetZone) {\n        draggableElement.elem.remove();\n    } else {\n        insertToZone(targetZone, draggableElement.elem);\n    }\n    draggableElement = {};\n}\n\nfunction elementPointerDownHandler(event) {\n    const targetElement = event.target;\n\n    // clone element to move in zones\n    const copy = targetElement.cloneNode(true);\n    copy.removeAttribute('id');\n\n    // change element color\n    targetElement.style.backgroundColor = getRandomColor();\n\n    // save shift of element to cursor\n    draggableElement.shiftX = event.clientX - targetElement.getBoundingClientRect().left;\n    draggableElement.shiftY = event.clientY - targetElement.getBoundingClientRect().top;\n\n    draggableElement.elem = copy;\n\n    startDrag(event.pageX, event.pageY, event.pointerType);\n}\n\nelement.addEventListener('pointerdown', elementPointerDownHandler);\n\nconst resizeObserver = new ResizeObserver(() => {\n    toggleGridScroll();\n});\n\nresizeObserver.observe(grid);\n"],"names":["$dad545c909cfec2d$var$element","document","getElementById","$dad545c909cfec2d$var$grid","$dad545c909cfec2d$var$free","$dad545c909cfec2d$var$error","$dad545c909cfec2d$var$draggableElement","body","innerHTML","Error","$dad545c909cfec2d$var$getTargetZone","clientX","clientY","isPointerInZone","coords","left","right","top","bottom","getBoundingClientRect","$dad545c909cfec2d$var$leaveZone","zone","classList","remove","id","$dad545c909cfec2d$var$toggleGridScroll","scrollHeight","clientHeight","add","e","$dad545c909cfec2d$var$insertToZone","elem","append","insertToGridZone","style","parseInt","insertToFreeZone","$dad545c909cfec2d$var$findZonesToHighlight","targetZone","$dad545c909cfec2d$var$enterZone","$dad545c909cfec2d$var$moveAt","pageX","pageY","shiftX","shiftY","$dad545c909cfec2d$var$documentPointerMoveHandler","event","$dad545c909cfec2d$var$elementPointerUpHandler","removeEventListener","target","addEventListener","targetElement","copy","cloneNode","removeAttribute","backgroundColor","Math","floor","random","toString","pointerType","$dad545c909cfec2d$var$startDrag","ResizeObserver","observe"],"version":3,"file":"index.7027e445.js.map"}